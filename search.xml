<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>PowerShell设置代理链接</title>
      <link href="/2019/02/13/PowerShell%E8%AE%BE%E7%BD%AE%E4%BB%A3%E7%90%86%E9%93%BE%E6%8E%A5/"/>
      <url>/2019/02/13/PowerShell%E8%AE%BE%E7%BD%AE%E4%BB%A3%E7%90%86%E9%93%BE%E6%8E%A5/</url>
      
        <content type="html"><![CDATA[<p><img src="https://i.loli.net/2019/02/13/5c63c615cca99.png" alt="PowerShell.png"></p><h1 id="Windows-PowerShell&#x4EE3;&#x7406;&#x94FE;&#x63A5;"><a href="#Windows-PowerShell&#x4EE3;&#x7406;&#x94FE;&#x63A5;" class="headerlink" title="Windows PowerShell&#x4EE3;&#x7406;&#x94FE;&#x63A5;"></a>Windows PowerShell&#x4EE3;&#x7406;&#x94FE;&#x63A5;</h1><p>###&#x8FD9;&#x662F;&#x4E00;&#x6BB5;&#x4ECE;Microsoft&#x5B98;&#x65B9;&#x4E0B;&#x8F7D;&#x7684;&#x811A;&#x672C;,&#x614E;&#x91CD;&#x4F7F;&#x7528;</p><pre><code>&lt;#.SynopsisThis function will set the proxy settings provided as input to the cmdlet..DescriptionThis function will set the proxy server and (optinal) Automatic configuration script..Parameter ProxyServerThis parameter is set as the proxy for the system.Data from. This parameter is Mandatory.ExampleSetting proxy informationSet-InternetProxy -proxy &quot;proxy:7890&quot;.ExampleSetting proxy information and (optinal) Automatic Configuration Script Set-InternetProxy -proxy &quot;proxy:7890&quot; -acs &quot;http://proxy:7892&quot;#&gt;Function Set-InternetProxy{    [CmdletBinding()]    Param    (        [Parameter(Mandatory=$True,ValueFromPipeline=$true,ValueFromPipelineByPropertyName=$true)]        [String[]]$Proxy,        [Parameter(Mandatory=$False,ValueFromPipeline=$true,ValueFromPipelineByPropertyName=$true)]        [AllowEmptyString()]        [String[]]$acs                    )    Begin    {            $regKey=&quot;HKCU:\Software\Microsoft\Windows\CurrentVersion\Internet Settings&quot;            }    Process    {                Set-ItemProperty -path $regKey ProxyEnable -value 1        Set-ItemProperty -path $regKey ProxyServer -value $proxy                                    if($acs)         {                                         Set-ItemProperty -path $regKey AutoConfigURL -Value $acs           }    }     End    {        Write-Output &quot;Proxy is now enabled&quot;        Write-Output &quot;Proxy Server : $proxy&quot;        if ($acs)        {                        Write-Output &quot;Automatic Configuration Script : $acs&quot;        }        else        {                        Write-Output &quot;Automatic Configuration Script : Not Defined&quot;        }    }}</code></pre><p>&#x5C06;&#x4E0A;&#x9762;&#x7684;&#x4EE3;&#x7801;&#x590D;&#x5236;&#x4E0B;&#x6765;&#x5E76;&#x4FDD;&#x5B58;&#x4E3A;<strong>Set-InternetProxy.ps1</strong>&#x5373;&#x53EF;&#x3002;</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2019/02/13/hello-world/"/>
      <url>/2019/02/13/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre><code class="bash">$ hexo new &quot;My New Post&quot;</code></pre><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre><code class="bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre><code class="bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre><code class="bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
